package net.thevpc.gaming.atom.examples.pong.main.shared.dal.corba.generated;


/**
 * tn/edu/eniso/pong/main/shared/dal/corba/generated/ServerOperationsCorbaPOA.java .
 * Generated by the IDL-to-Java compiler (portable), version "3.2"
 * from DalCorba.idl
 * Tuesday, December 20, 2011 11:10:02 PM CET
 */

public abstract class ServerOperationsCorbaPOA extends org.omg.PortableServer.Servant
        implements ServerOperationsCorbaOperations, org.omg.CORBA.portable.InvokeHandler {

    // Constructors

    private static java.util.Hashtable _methods = new java.util.Hashtable();

    static {
        _methods.put("setClient", new java.lang.Integer(0));
        _methods.put("keyLeft", new java.lang.Integer(1));
        _methods.put("keyRight", new java.lang.Integer(2));
        _methods.put("keySpace", new java.lang.Integer(3));
    }

    public org.omg.CORBA.portable.OutputStream _invoke(String $method,
                                                       org.omg.CORBA.portable.InputStream in,
                                                       org.omg.CORBA.portable.ResponseHandler $rh) {
        org.omg.CORBA.portable.OutputStream out = null;
        java.lang.Integer __method = (java.lang.Integer) _methods.get($method);
        if (__method == null)
            throw new org.omg.CORBA.BAD_OPERATION(0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

        switch (__method.intValue()) {
            case 0:  // ConnectorCorba/ServerOperationsCorba/setClient
            {
                ClientOperationsCorbaHolder client = new ClientOperationsCorbaHolder();
                client.value = ClientOperationsCorbaHelper.read(in);
                this.setClient(client);
                out = $rh.createReply();
                ClientOperationsCorbaHelper.write(out, client.value);
                break;
            }

            case 1:  // ConnectorCorba/ServerOperationsCorba/keyLeft
            {
                this.keyLeft();
                out = $rh.createReply();
                break;
            }

            case 2:  // ConnectorCorba/ServerOperationsCorba/keyRight
            {
                this.keyRight();
                out = $rh.createReply();
                break;
            }

            case 3:  // ConnectorCorba/ServerOperationsCorba/keySpace
            {
                this.keySpace();
                out = $rh.createReply();
                break;
            }

            default:
                throw new org.omg.CORBA.BAD_OPERATION(0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
        }

        return out;
    } // _invoke

    // Type-specific CORBA::Object operations
    private static String[] __ids = {
            "IDL:ConnectorCorba/ServerOperationsCorba:1.0"};

    public String[] _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId) {
        return (String[]) __ids.clone();
    }

    public ServerOperationsCorba _this() {
        return ServerOperationsCorbaHelper.narrow(
                super._this_object());
    }

    public ServerOperationsCorba _this(org.omg.CORBA.ORB orb) {
        return ServerOperationsCorbaHelper.narrow(
                super._this_object(orb));
    }


} // class ServerOperationsCorbaPOA
