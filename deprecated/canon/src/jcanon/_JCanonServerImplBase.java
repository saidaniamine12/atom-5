package jcanon;


/**
* jcanon/_JCanonServerImplBase.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /home/vpc/xprojects/gaming/canon/src/tn/rnu/enit/ateliercorba/jcanon/jcanon.idl
* lundi 15 octobre 2007 19 h 43 CEST
*/

public abstract class _JCanonServerImplBase extends org.omg.CORBA.portable.ObjectImpl
                implements jcanon.JCanonServer, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors
  public _JCanonServerImplBase ()
  {
  }

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("connect", new java.lang.Integer (0));
    _methods.put ("playerHitFire", new java.lang.Integer (1));
    _methods.put ("playerMoveLeft", new java.lang.Integer (2));
    _methods.put ("playerMoveRight", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // jcanon/JCanonServer/connect
       {
         jcanon.JCanonClient client = jcanon.JCanonClientHelper.read (in);
         int $result = (int)0;
         $result = this.connect (client);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 1:  // jcanon/JCanonServer/playerHitFire
       {
         int player = in.read_long ();
         this.playerHitFire (player);
         out = $rh.createReply();
         break;
       }

       case 2:  // jcanon/JCanonServer/playerMoveLeft
       {
         int player = in.read_long ();
         this.playerMoveLeft (player);
         out = $rh.createReply();
         break;
       }

       case 3:  // jcanon/JCanonServer/playerMoveRight
       {
         int player = in.read_long ();
         this.playerMoveRight (player);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:tn.rnu.enit.ateliercorba/jcanon/JCanonServer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }


} // class _JCanonServerImplBase
